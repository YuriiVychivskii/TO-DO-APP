rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function getUserRole(listId) {
      return get(/databases/$(database)/documents/lists/$(listId))
        .data.collaborators[request.auth.uid];
    }

    function isAdmin(listId) {
      return isSignedIn() && getUserRole(listId) == 'admin';
    }

    function isViewerOrAdmin(listId) {
      let role = getUserRole(listId);
      return isSignedIn() && (role == 'admin' || role == 'viewer');
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      allow write: if false; 
    }

    match /lists/{listId} {
      allow read: if isViewerOrAdmin(listId);
      allow create: if isSignedIn();
      allow update, delete: if isAdmin(listId);
    }

    match /lists/{listId}/tasks/{taskId} {
      allow read: if isViewerOrAdmin(listId);
      allow create, update, delete: if isAdmin(listId);
    }
  }
}
